var WPForms = window.WPForms || {};
(WPForms.FrontendModern =
  WPForms.FrontendModern ||
  (function (a, o) {
    const i = {
      init() {
        o(i.ready);
      },
      ready() {
        i.updateGBBlockAccentColors(),
          i.initPageBreakButtons(),
          i.initButtonStyle(),
          i.events();
      },
      events() {
        o(a).on(
          "wpforms_elementor_form_fields_initialized",
          i.initPageBreakButtons
        ),
          o("form.wpforms-form")
            .on("wpformsCombinedUploadsSizeError", i.combinedUploadsSizeError)
            .on("wpformsFormSubmitButtonDisable", i.formSubmitButtonDisable)
            .on("wpformsFormSubmitButtonRestore", i.formSubmitButtonRestore)
            .on("wpformsPageChange", i.pageChange),
          o("form.wpforms-form .wpforms-submit").on(
            "keydown click",
            i.disabledButtonPress
          ),
          o(a).on(
            "focus",
            ".wpforms-render-modern .wpforms-timepicker",
            i.updateTimepickerDropdown
          );
      },
      updateTimepickerDropdown() {
        const e = i.getCssVars(o(this));
        setTimeout(function () {
          var r = o(".ui-timepicker-wrapper .ui-timepicker-list");
          r.css("background", e["field-menu-color"]),
            r.find("li").css("color", e["field-text-color"]),
            r
              .find(".ui-timepicker-selected")
              .css("background", e["button-background-color"])
              .css("color", e["button-text-color"]);
        }, 0);
      },
      initButtonStyle() {
        o(
          ".wpforms-block.wpforms-container-full, .elementor-widget-wpforms .wpforms-container-full"
        ).each(function () {
          var r = o(this),
            e = getComputedStyle(r.get(0)),
            e = i.getCssVar(e, "--wpforms-button-background-color-alt");
          i.isTransparentColor(e) &&
            r.find("button.wpforms-submit").addClass("wpforms-opacity-hover");
        });
      },
      isTransparentColor(r) {
        r = i.getColorAsRGBArray(r);
        return Number(r?.[3]) <= 0.33;
      },
      updateGBBlockAccentColors() {
        o(
          ".wpforms-block.wpforms-container-full, .elementor-widget-wpforms .wpforms-container-full"
        ).each(function () {
          var r = o(this);
          i.updateGBBlockPageIndicatorColor(r),
            i.updateGBBlockIconChoicesColor(r),
            i.updateGBBlockRatingColor(r);
        });
      },
      updateGBBlockPageIndicatorColor(r) {
        var r = r.find(".wpforms-page-indicator"),
          e = r.find(
            ".wpforms-page-indicator-page-progress, .wpforms-page-indicator-page.active .wpforms-page-indicator-page-number"
          ),
          o = e.find(".wpforms-page-indicator-page-triangle");
        r.data("indicator-color", "var( --wpforms-page-break-color )"),
          e.css("background-color", "var( --wpforms-page-break-color )"),
          o.css("border-top-color", "var( --wpforms-page-break-color )");
      },
      updateGBBlockIconChoicesColor(r) {
        r.find(".wpforms-icon-choices").css(
          "--wpforms-icon-choices-color",
          "var( --wpforms-button-background-color )"
        );
      },
      updateGBBlockRatingColor(r) {
        r.find(".wpforms-field-rating-item svg").css(
          "color",
          "var( --wpforms-page-break-color, var( --wpforms-button-background-color ) )"
        );
      },
      initPageBreakButtons() {
        o(".wpforms-page-button")
          .removeClass("wpforms-disabled")
          .attr("aria-disabled", "false")
          .attr("aria-describedby", "");
      },
      combinedUploadsSizeError(r, e, o) {
        var t = e.data("formid"),
          s = e.attr("aria-errormessage") || "",
          t = `wpforms-${t}-footer-error`,
          a = e.find(".wpforms-submit");
        e.attr({ "aria-invalid": "true", "aria-errormessage": s + " " + t }),
          o.attr({ role: "alert", id: t }),
          o.find("> .wpforms-hidden:first-child").remove(),
          o.prepend(
            `<span class="wpforms-hidden">${wpforms_settings.formErrorMessagePrefix}</span>`
          ),
          a.attr("aria-describedby", t);
      },
      combinedUploadsSizeOk(r, e, o) {
        console.warn(
          'WARNING! Function "WPForms.FrontendModern( e, $form, $errorCnt )" has been deprecated, please use the new "formSubmitButtonDisable: function( e, $form, $submitBtn )" function instead!'
        ),
          e
            .find(".wpforms-submit")
            .removeClass("wpforms-disabled")
            .attr("aria-disabled", "false")
            .attr("aria-describedby", "");
      },
      formSubmitButtonDisable(r, e, o) {
        e = e.attr("id") + "-submit-btn-disabled";
        o.before(
          `<div class="wpforms-hidden" id="${e}">${wpforms_settings.submitBtnDisabled}</div>`
        ),
          o
            .prop("disabled", !1)
            .addClass("wpforms-disabled")
            .attr("aria-disabled", "true")
            .attr("aria-describedby", e);
      },
      formSubmitButtonRestore(r, e, o) {
        var t = e.attr("id") + "-submit-btn-disabled";
        e.find("#" + t).remove(),
          o
            .removeClass("wpforms-disabled")
            .attr("aria-disabled", "false")
            .attr("aria-describedby", "");
      },
      disabledButtonPress(r) {
        !o(this).hasClass("wpforms-disabled") ||
          ("Enter" !== r.key && "click" !== r.type) ||
          (r.preventDefault(), r.stopPropagation());
      },
      pageChange(r, o, t) {
        var s = t.find(".wpforms-page-indicator");
        if (wpforms_settings.indicatorStepsPattern && s.length) {
          t = t.find(".wpforms-page").length;
          let r = wpforms_settings.indicatorStepsPattern,
            e;
          (r = r.replace("{current}", o).replace("{total}", t)),
            (e = s.hasClass("progress")
              ? s
                  .find(".wpforms-page-indicator-page-title")
                  .data(`page-${o}-title`)
              : s
                  .find(
                    `.wpforms-page-indicator-page-${o} .wpforms-page-indicator-page-title`
                  )
                  .text()),
            (r = e ? e + ". " + r : r),
            s.attr("aria-valuenow", o),
            i.screenReaderAnnounce(r, "polite");
        }
      },
      screenReaderAnnounce(r, e) {
        var o = a.createElement("div"),
          t = "wpforms-screen-reader-announce-" + Date.now();
        o.setAttribute("id", t),
          o.setAttribute("aria-live", e || "polite"),
          o.classList.add("wpforms-screen-reader-announce");
        const s = a.body.appendChild(o);
        setTimeout(function () {
          s.innerHTML = r;
        }, 100),
          setTimeout(function () {
            a.body.removeChild(s);
          }, 1e3);
      },
      getColorWithOpacity(r, e) {
        return WPFormsUtils.cssColorsUtils.getColorWithOpacity(r, e);
      },
      getSolidColor(r) {
        r = r.trim();
        var e = i.getColorAsRGBArray(r);
        return e ? `rgb(${e[0]},${e[1]},${e[2]})` : r;
      },
      isValidColor(r) {
        return WPFormsUtils.cssColorsUtils.isValidColor(r);
      },
      getColorAsRGBArray(r) {
        return WPFormsUtils.cssColorsUtils.getColorAsRGBArray(r);
      },
      getCssVar(r, e) {
        if (!r || "function" != typeof r.getPropertyValue) return null;
        let o = r.getPropertyValue(e).trim();
        return (o = e.includes("color") ? o.replace(/\s/g, "") : o);
      },
      getCssVars(r) {
        if (!r || !r.length) return null;
        var r = r.hasClass("wpforms-container")
            ? r
            : r.closest(".wpforms-container"),
          e = getComputedStyle(r.get(0)),
          o = wpforms_settings.css_vars,
          t = {};
        for (let r = 0; r < o.length; r++)
          t[o[r]] = i.getCssVar(e, "--wpforms-" + o[r]);
        return t;
      },
    };
    return i;
  })(document, (window, jQuery))),
  WPForms.FrontendModern.init();
