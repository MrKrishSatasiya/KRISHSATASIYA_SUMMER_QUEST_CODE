var wpforms =
  window.wpforms ||
  (function (s, l, d) {
    const p = {
      cache: {},
      isUpdatingToken: !1,
      init() {
        d(p.ready),
          d(l).on("load", function () {
            "function" == typeof d.ready.then ? d.ready.then(p.load) : p.load();
          }),
          p.bindUIActions(),
          p.bindOptinMonster();
      },
      ready() {
        p.clearUrlQuery(),
          p.setUserIdentifier(),
          p.loadValidation(),
          p.loadDatePicker(),
          p.loadTimePicker(),
          p.loadInputMask(),
          p.loadSmartPhoneField(),
          p.loadPayments(),
          p.loadMailcheck(),
          p.loadChoicesJS(),
          p.initTokenUpdater(),
          p.restoreSubmitButtonOnEventPersisted(),
          p.bindSmartPhoneField(),
          p.bindChoicesJS(),
          d(".wpforms-randomize").each(function () {
            for (var e = d(this), t = e.children(); t.length; )
              e.append(t.splice(Math.floor(Math.random() * t.length), 1)[0]);
          }),
          d(".wpforms-page-button").prop("disabled", !1),
          d(s).trigger("wpformsReady"),
          d(".wpforms-smart-phone-field").each(function () {
            var e = d(this);
            p.fixPhoneFieldSnippets(e);
          });
      },
      load() {},
      clearUrlQuery() {
        var e = l.location;
        let t = e.search;
        -1 !== t.indexOf("wpforms_form_id=") &&
          ((t = t.replace(
            /([&?]wpforms_form_id=[0-9]*$|wpforms_form_id=[0-9]*&|[?&]wpforms_form_id=[0-9]*(?=#))/,
            ""
          )),
          history.replaceState({}, null, e.origin + e.pathname + t));
      },
      loadValidation() {
        void 0 !== d.fn.validate &&
          (d(".wpforms-input-temp-name").each(function (e, t) {
            var r = Math.floor(9999 * Math.random()) + 1;
            d(this).attr("name", "wpf-temp-" + r);
          }),
          d(s).on("change", ".wpforms-validate input[type=url]", function () {
            var e = d(this).val();
            if (!e) return !1;
            "http://" !== e.substr(0, 7) &&
              "https://" !== e.substr(0, 8) &&
              d(this).val("https://" + e);
          }),
          (d.validator.messages.required = wpforms_settings.val_required),
          (d.validator.messages.url = wpforms_settings.val_url),
          (d.validator.messages.email = wpforms_settings.val_email),
          (d.validator.messages.number = wpforms_settings.val_number),
          void 0 !== d.fn.payment &&
            d.validator.addMethod(
              "creditcard",
              function (e, t) {
                e = d.payment.validateCardNumber(e);
                return this.optional(t) || e;
              },
              wpforms_settings.val_creditcard
            ),
          d.validator.addMethod(
            "extension",
            function (e, t, r) {
              return (
                (r =
                  "string" == typeof r
                    ? r.replace(/,/g, "|")
                    : "png|jpe?g|gif"),
                this.optional(t) || e.match(new RegExp("\\.(" + r + ")$", "i"))
              );
            },
            wpforms_settings.val_fileextension
          ),
          d.validator.addMethod(
            "maxsize",
            function (e, t, r) {
              var a = r,
                r = this.optional(t);
              let o, i;
              if (r) return r;
              if (t.files && t.files.length)
                for (o = 0, i = t.files.length; o < i; o++)
                  if (t.files[o].size > a) return !1;
              return !0;
            },
            wpforms_settings.val_filesize
          ),
          d.validator.addMethod("step", function (e, t, r) {
            i = r;
            const a =
              (Math.floor(i) !== i && i.toString().split(".")[1].length) || 0;
            function o(e) {
              return Math.round(e * Math.pow(10, a));
            }
            var i = o(d(t).attr("min"));
            return (e = o(e) - i), this.optional(t) || o(e) % o(r) == 0;
          }),
          (d.validator.methods.email = function (e, t) {
            return (
              this.optional(t) ||
              (function (e) {
                if ("string" != typeof e) return !1;
                var t = e.indexOf("@", 1);
                if (e.length < 6 || 254 < e.length || -1 === t) return !1;
                if (-1 !== e.indexOf("@", t + 1)) return !1;
                var [t, e] = e.split("@");
                if (!t || !e) return !1;
                if (
                  !/^[a-zA-Z0-9!#$%&'*+/=?^_`{|}~.-]+$/.test(t) ||
                  63 < t.length
                )
                  return !1;
                if (/\.{2,}/.test(e) || e.trim(" \t\n\r\0\v.") !== e) return !1;
                t = e.split(".");
                if (t.length < 2) return !1;
                var r = /^[a-z0-9-]+$/i;
                for (const a of t)
                  if (
                    63 < a.length ||
                    a.trim(" \t\n\r\0\v-") !== a ||
                    !r.test(a)
                  )
                    return !1;
                return !0;
              })(e)
            );
          }),
          d.validator.addMethod(
            "restricted-email",
            function (e, t) {
              var r = d(t);
              return (
                !r.val().length ||
                ((r = r.closest(".wpforms-form").data("formid")),
                Object.prototype.hasOwnProperty.call(p.cache, r) &&
                Object.prototype.hasOwnProperty.call(
                  p.cache[r],
                  "restrictedEmailValidation"
                ) &&
                Object.prototype.hasOwnProperty.call(
                  p.cache[r].restrictedEmailValidation,
                  e
                )
                  ? p.cache[r].restrictedEmailValidation[e]
                  : (p.restrictedEmailRequest(t, e), "pending"))
              );
            },
            wpforms_settings.val_email_restricted
          ),
          d.validator.addMethod(
            "confirm",
            function (e, t, r) {
              t = d(t).closest(".wpforms-field");
              return (
                d(t.find("input")[0]).val() === d(t.find("input")[1]).val()
              );
            },
            wpforms_settings.val_confirm
          ),
          d.validator.addMethod(
            "required-payment",
            function (e, t) {
              return 0 < p.amountSanitize(e);
            },
            wpforms_settings.val_requiredpayment
          ),
          d.validator.addMethod(
            "time12h",
            function (e, t) {
              return (
                this.optional(t) ||
                /^((0?[1-9]|1[012])(:[0-5]\d){1,2}(\ ?[AP]M))$/i.test(e)
              );
            },
            wpforms_settings.val_time12h
          ),
          d.validator.addMethod(
            "time24h",
            function (e, t) {
              return (
                this.optional(t) ||
                /^(([0-1]?[0-9])|([2][0-3])):([0-5]?[0-9])(\ ?[AP]M)?$/i.test(e)
              );
            },
            wpforms_settings.val_time24h
          ),
          d.validator.addMethod(
            "turnstile",
            function (e) {
              return e;
            },
            wpforms_settings.val_turnstile_fail_msg
          ),
          d.validator.addMethod(
            "time-limit",
            function (e, t) {
              var t = d(t),
                r = t.data("min-time");
              return (
                void 0 === r ||
                !(t.prop("required") || !p.empty(e)) ||
                ((t = t.data("max-time")),
                p.compareTimesGreaterThan(t, r)
                  ? p.compareTimesGreaterThan(e, r) &&
                    p.compareTimesGreaterThan(t, e)
                  : (p.compareTimesGreaterThan(e, r) &&
                      p.compareTimesGreaterThan(e, t)) ||
                    (p.compareTimesGreaterThan(r, e) &&
                      p.compareTimesGreaterThan(t, e)))
              );
            },
            function (e, t) {
              t = d(t);
              let r = t.data("min-time"),
                a = t.data("max-time");
              return (
                (r = r.replace(/^00:([0-9]{2})pm$/, "12:$1pm")),
                (a = a.replace(/^00:([0-9]{2})pm$/, "12:$1pm")),
                (r = r.replace(/(am|pm)/g, " $1").toUpperCase()),
                (a = a.replace(/(am|pm)/g, " $1").toUpperCase()),
                wpforms_settings.val_time_limit
                  .replace("{minTime}", r)
                  .replace("{maxTime}", a)
              );
            }
          ),
          d.validator.addMethod(
            "check-limit",
            function (e, t) {
              var t = d(t).closest("ul"),
                r = parseInt(t.attr("data-choice-limit") || 0, 10);
              return (
                0 === r || t.find('input[type="checkbox"]:checked').length <= r
              );
            },
            function (e, t) {
              t = parseInt(
                d(t).closest("ul").attr("data-choice-limit") || 0,
                10
              );
              return wpforms_settings.val_checklimit.replace("{#}", t);
            }
          ),
          void 0 !== d.fn.intlTelInput &&
            d.validator.addMethod(
              "smart-phone-field",
              function (e, t) {
                return (
                  !e.match(/[^\d()\-+\s]/) &&
                  (this.optional(t) || d(t).intlTelInput("isValidNumber"))
                );
              },
              wpforms_settings.val_phone
            ),
          d.validator.addMethod(
            "inputmask-incomplete",
            function (e, t) {
              return (
                0 === e.length ||
                void 0 === d.fn.inputmask ||
                d(t).inputmask("isComplete")
              );
            },
            wpforms_settings.val_inputmask_incomplete
          ),
          d.validator.addMethod(
            "required-positive-number",
            function (e, t) {
              return 0 < p.amountSanitize(e);
            },
            wpforms_settings.val_number_positive
          ),
          d.validator.addMethod(
            "required-minimum-price",
            function (e, t, r) {
              t = d(t);
              return (
                ("" === e && !t.hasClass("wpforms-field-required")) ||
                Number(p.amountSanitize(p.amountFormat(r))) <=
                  Number(p.amountSanitize(e))
              );
            },
            wpforms_settings.val_minimum_price
          ),
          d.validator.addMethod(
            "us-phone-field",
            function (e, t) {
              return (
                !e.match(/[^\d()\-+\s]/) &&
                (this.optional(t) || 10 === e.replace(/[^\d]/g, "").length)
              );
            },
            wpforms_settings.val_phone
          ),
          d.validator.addMethod(
            "int-phone-field",
            function (e, t) {
              return (
                !e.match(/[^\d()\-+\s]/) &&
                (this.optional(t) || 0 < e.replace(/[^\d]/g, "").length)
              );
            },
            wpforms_settings.val_phone
          ),
          d.validator.addMethod(
            "password-strength",
            function (e, t) {
              var r = d(t);
              return (
                WPFormsPasswordField.passwordStrength(e, t) >=
                Number(r.data("password-strength-level"))
              );
            },
            wpforms_settings.val_password_strength
          ),
          d(".wpforms-validate").each(function () {
            var e = d(this),
              t = e.data("formid");
            let r;
            (r =
              void 0 !== l["wpforms_" + t] &&
              l["wpforms_" + t].hasOwnProperty("validate")
                ? l["wpforms_" + t].validate
                : "undefined" != typeof wpforms_validate
                ? wpforms_validate
                : {
                    errorElement: p.isModernMarkupEnabled() ? "em" : "label",
                    errorClass: "wpforms-error",
                    validClass: "wpforms-valid",
                    ignore:
                      ":hidden:not(textarea.wp-editor-area), .wpforms-conditional-hide textarea.wp-editor-area",
                    ignoreTitle: !0,
                    errorPlacement(e, t) {
                      p.isLikertScaleField(t)
                        ? (t.closest("table").hasClass("single-row")
                            ? t.closest(".wpforms-field")
                            : t.closest("tr").find("th")
                          ).append(e)
                        : p.isWrappedField(t)
                        ? t.closest(".wpforms-field").append(e)
                        : p.isDateTimeField(t)
                        ? p.dateTimeErrorPlacement(t, e)
                        : p.isFieldInColumn(t) || p.isFieldHasHint(t)
                        ? t.parent().append(e)
                        : p.isLeadFormsSelect(t)
                        ? t.parent().parent().append(e)
                        : t.hasClass("wp-editor-area")
                        ? t.parent().parent().parent().append(e)
                        : e.insertAfter(t),
                        p.isModernMarkupEnabled() &&
                          e.attr({
                            role: "alert",
                            "aria-label": wpforms_settings.errorMessagePrefix,
                            for: "",
                          });
                    },
                    highlight(e, t, r) {
                      var a = d(e),
                        o = a.closest(".wpforms-field"),
                        i = a.attr("name");
                      ("radio" === a.attr("type") ||
                      "checkbox" === a.attr("type")
                        ? o.find('input[name="' + i + '"]')
                        : a
                      )
                        .addClass(t)
                        .removeClass(r),
                        "password" === a.attr("type") &&
                          "" === a.val().trim() &&
                          l.WPFormsPasswordField &&
                          a.data("rule-password-strength") &&
                          a.hasClass("wpforms-field-required") &&
                          WPFormsPasswordField.passwordStrength("", e),
                        o.addClass("wpforms-has-error");
                    },
                    unhighlight(e, t, r) {
                      var e = d(e),
                        a = e.closest(".wpforms-field"),
                        o = e.attr("name");
                      ("radio" === e.attr("type") ||
                      "checkbox" === e.attr("type")
                        ? a.find('input[name="' + o + '"]')
                        : e
                      )
                        .addClass(r)
                        .removeClass(t),
                        a.find(
                          ":input.wpforms-error,[data-dz-errormessage]:not(:empty)"
                        ).length || a.removeClass("wpforms-has-error"),
                        p.isModernMarkupEnabled() &&
                          e.parent().find("em.wpforms-error").remove();
                    },
                    submitHandler(s) {
                      function n(e, t) {
                        let r = "label",
                          a = "";
                        p.isModernMarkupEnabled() &&
                          ((r = "em"), (a = 'role="alert"'));
                        var o = `<${r} id="wpforms-field_recaptcha-error" class="wpforms-error" ${a}> ${wpforms_settings.val_recaptcha_fail_msg}</${r}>`;
                        e.find(".wpforms-recaptcha-container").append(o),
                          p.restoreSubmitButton(e, t);
                      }
                      function e() {
                        const e = d(s),
                          t = e.closest(".wpforms-container"),
                          r = e.find(".wpforms-submit"),
                          a = r.data("captchaInvalid"),
                          o = r.data("alt-text"),
                          i = r.get(0).recaptchaID;
                        return (
                          e.data("token") &&
                            0 === d(".wpforms-token", e).length &&
                            d(
                              '<input type="hidden" class="wpforms-token" name="wpforms[token]" />'
                            )
                              .val(e.data("token"))
                              .appendTo(e),
                          e.find("#wpforms-field_recaptcha-error").remove(),
                          r.prop("disabled", !0),
                          WPFormsUtils.triggerEvent(
                            e,
                            "wpformsFormSubmitButtonDisable",
                            [e, r]
                          ),
                          o && r.text(o),
                          a
                            ? n(e, t)
                            : p.empty(i) && 0 !== i
                            ? (d(".wpforms-input-temp-name").removeAttr("name"),
                              void p.formSubmit(e))
                            : (grecaptcha.execute(i).then(null, function () {
                                grecaptcha.getResponse() || n(e, t);
                              }),
                              !1)
                        );
                      }
                      return "function" == typeof wpformsRecaptchaV3Execute
                        ? wpformsRecaptchaV3Execute(e)
                        : e();
                    },
                    invalidHandler(e, t) {
                      void 0 !== t.errorList[0] &&
                        p.scrollToError(d(t.errorList[0].element));
                    },
                    onkeyup: WPFormsUtils.debounce(function (e, t) {
                      d(e).hasClass("wpforms-novalidate-onkeyup") ||
                        (9 === t.which && "" === this.elementValue(e)) ||
                        -1 !==
                          d.inArray(
                            t.keyCode,
                            [
                              16, 17, 18, 20, 35, 36, 37, 38, 39, 40, 45, 144,
                              225,
                            ]
                          ) ||
                        ((e.name in this.submitted || e.name in this.invalid) &&
                          this.element(e));
                    }, 1e3),
                    onfocusout: function (e) {
                      let t = !1;
                      d(e).hasClass("wpforms-novalidate-onkeyup") &&
                        !e.value &&
                        (t = !0),
                        this.checkable(e) ||
                          (!(e.name in this.submitted) && this.optional(e)) ||
                          (t = !0),
                        (t = d(e).data("server-error") ? !1 : t) &&
                          this.element(e);
                    },
                    onclick(e) {
                      let t = !1;
                      var r = (e || {}).type;
                      let a = d(e);
                      -1 < ["checkbox", "radio"].indexOf(r) &&
                        ((a = a.hasClass("wpforms-likert-scale-option")
                          ? a.closest("tr")
                          : a.closest(".wpforms-field"))
                          .find("label.wpforms-error, em.wpforms-error")
                          .remove(),
                        (t = !0)),
                        t && this.element(e);
                    },
                  }),
              e.validate(r);
          }));
      },
      restrictedEmailRequest(r, a) {
        var e = d(r),
          t = e.closest("form");
        const o = t.data("validator"),
          i = t.data("formid");
        t = e.closest(".wpforms-field").data("field-id");
        (p.cache[i] = p.cache[i] || {}),
          o.startRequest(r),
          d.post({
            url: wpforms_settings.ajaxurl,
            type: "post",
            data: {
              action: "wpforms_restricted_email",
              form_id: i,
              field_id: t,
              email: a,
            },
            dataType: "json",
            success(e) {
              var t = {},
                e = e.success && e.data;
              e ||
                ((t[r.name] = wpforms_settings.val_email_restricted),
                o.showErrors(t)),
                (p.cache[i].restrictedEmailValidation =
                  p.cache[i].restrictedEmailValidation || []),
                Object.prototype.hasOwnProperty.call(
                  p.cache[i].restrictedEmailValidation,
                  a
                ) || (p.cache[i].restrictedEmailValidation[a] = e),
                o.stopRequest(r, e);
            },
          });
      },
      isFieldInColumn(e) {
        return (
          e.parent().hasClass("wpforms-one-half") ||
          e.parent().hasClass("wpforms-two-fifths") ||
          e.parent().hasClass("wpforms-one-fifth")
        );
      },
      isFieldHasHint(e) {
        return (
          0 <
          e.nextAll(
            ".wpforms-field-sublabel, .wpforms-field-description, .wpforms-field-limit-text, .wpforms-pass-strength-result"
          ).length
        );
      },
      isDateTimeField(e) {
        return (
          e.hasClass("wpforms-timepicker") ||
          e.hasClass("wpforms-datepicker") ||
          (e.is("select") &&
            e.attr("class").match(/date-month|date-day|date-year/))
        );
      },
      isWrappedField(e) {
        return (
          "checkbox" === e.attr("type") ||
          "radio" === e.attr("type") ||
          "range" === e.attr("type") ||
          "select" === e.is("select") ||
          1 === e.data("is-wrapped-field") ||
          e.parent().hasClass("iti") ||
          e.hasClass("wpforms-validation-group-member") ||
          e.hasClass("choicesjs-select") ||
          e.hasClass("wpforms-net-promoter-score-option") ||
          e.hasClass("wpforms-field-payment-coupon-input")
        );
      },
      isLikertScaleField(e) {
        return e.hasClass("wpforms-likert-scale-option");
      },
      isLeadFormsSelect(e) {
        return e.parent().hasClass("wpforms-lead-forms-select");
      },
      isCoupon(e) {
        return (
          console.warn(
            'WARNING! Function "wpforms.isCoupon( element )" has been deprecated'
          ),
          e.closest(".wpforms-field").hasClass("wpforms-field-payment-coupon")
        );
      },
      dateTimeErrorPlacement(e, t) {
        var r = e.closest(".wpforms-field-row-block, .wpforms-field-date-time");
        r.length
          ? r.find("label.wpforms-error, em.wpforms-error").length ||
            r.append(t)
          : e.closest(".wpforms-field").append(t);
      },
      loadDatePicker(e) {
        void 0 !== d.fn.flatpickr &&
          (e = e?.length ? e : d(s))
            .find(".wpforms-datepicker-wrap")
            .each(function () {
              const a = d(this),
                e = a.find("input"),
                t = a.closest(".wpforms-form"),
                r = t.data("formid"),
                o = a.closest(".wpforms-field").data("field-id");
              let i;
              var s;
              !(i =
                void 0 !== l["wpforms_" + r + "_" + o] &&
                l["wpforms_" + r + "_" + o].hasOwnProperty("datepicker")
                  ? l["wpforms_" + r + "_" + o].datepicker
                  : void 0 !== l["wpforms_" + r] &&
                    l["wpforms_" + r].hasOwnProperty("datepicker")
                  ? l["wpforms_" + r].datepicker
                  : "undefined" != typeof wpforms_datepicker
                  ? wpforms_datepicker
                  : { disableMobile: !0 }).hasOwnProperty("locale") &&
                "undefined" != typeof wpforms_settings &&
                wpforms_settings.hasOwnProperty("locale") &&
                (i.locale = wpforms_settings.locale),
                (i.wrap = !0),
                (i.dateFormat = e.data("date-format")),
                1 === e.data("disable-past-dates") &&
                  ((i.minDate = "today"),
                  1 === e.data("disable-todays-date")) &&
                  ((s = new Date()), (i.minDate = s.setDate(s.getDate() + 1)));
              let n = e.data("limit-days");
              const p = ["sun", "mon", "tue", "wed", "thu", "fri", "sat"];
              n &&
                "" !== n &&
                ((n = n.split(",")),
                (i.disable = [
                  function (e) {
                    for (const t in n)
                      if (p.indexOf(n[t]) === e.getDay()) return !1;
                    return !0;
                  },
                ])),
                (i.onChange = function (e, t, r) {
                  a.find(".wpforms-datepicker-clear").css(
                    "display",
                    "" === t ? "none" : "block"
                  );
                }),
                a.flatpickr(i);
            });
      },
      loadTimePicker(e) {
        void 0 !== d.fn.timepicker &&
          (e = e?.length ? e : d(s))
            .find(".wpforms-timepicker")
            .each(function () {
              var e = d(this),
                t = e.closest(".wpforms-form").data("formid"),
                r = e.closest(".wpforms-field").data("field-id");
              let a;
              a =
                void 0 !== l["wpforms_" + t + "_" + r] &&
                l["wpforms_" + t + "_" + r].hasOwnProperty("timepicker")
                  ? l["wpforms_" + t + "_" + r].timepicker
                  : void 0 !== l["wpforms_" + t] &&
                    l["wpforms_" + t].hasOwnProperty("timepicker")
                  ? l["wpforms_" + t].timepicker
                  : "undefined" != typeof wpforms_timepicker
                  ? wpforms_timepicker
                  : { scrollDefault: "now", forceRoundTime: !0 };
              r = e.val();
              e.timepicker(a), r && (e.val(r), e.trigger("changeTime"));
            });
      },
      loadInputMask(e) {
        void 0 !== d.fn.inputmask &&
          (e = e?.length ? e : d(s))
            .find(".wpforms-masked-input")
            .inputmask({ rightAlign: !1 });
      },
      fixPhoneFieldSnippets(t) {
        t.siblings('input[type="hidden"]').each(function () {
          var e;
          d(this).attr("name").includes("function") &&
            (e = (e = t.data("plugin_intlTelInput")).d || e.options) &&
            (t.intlTelInput("destroy"),
            (e.initialCountry = e.initialCountry.toLowerCase()),
            (e.onlyCountries = e.onlyCountries.map((e) => e.toLowerCase())),
            (e.preferredCountries = e.preferredCountries.map((e) =>
              e.toLowerCase()
            )),
            t.intlTelInput(e),
            t.siblings('input[type="hidden"]').each(function () {
              var e = d(this);
              e.attr("name", e.attr("name").replace("wpf-temp-", ""));
            }));
        });
      },
      loadSmartPhoneField(e) {
        if (void 0 !== d.fn.intlTelInput) {
          const a = {
            countrySearch: !1,
            fixDropdownWidth: !1,
            preferredCountries: ["us", "gb"],
          };
          let t;
          var r;
          if (
            (wpforms_settings.gdpr || (a.geoIpLookup = p.currentIpToCountry),
            wpforms_settings.gdpr &&
              ((r = this.getFirstBrowserLanguage()),
              (t = -1 < r.indexOf("-") ? r.split("-").pop() : "")),
            t)
          ) {
            let e = l.intlTelInputGlobals.getCountryData();
            (e = e.filter(function (e) {
              return e.iso2 === t.toLowerCase();
            })),
              (t = e.length ? t : "");
          }
          (a.initialCountry =
            wpforms_settings.gdpr && t ? t.toLowerCase() : "auto"),
            (e = e?.length ? e : d(s))
              .find(".wpforms-smart-phone-field")
              .each(function (e, t) {
                const r = d(t);
                if (r.parents(".elementor-location-popup").is(":hidden"))
                  return !1;
                (a.hiddenInput = function (e) {
                  return { phone: e };
                }),
                  (a.utilsScript =
                    wpforms_settings.wpforms_plugin_url +
                    "assets/pro/lib/intl-tel-input/jquery.intl-tel-input-utils.min.js"),
                  r.intlTelInput(a),
                  r.attr("name", "wpf-temp-" + r.attr("name")),
                  r.addClass("wpforms-input-temp-name"),
                  r.on("blur input", function () {
                    (!r.intlTelInput("isValidNumber") &&
                      p.empty(l.WPFormsEditEntry)) ||
                      r
                        .siblings('input[type="hidden"]')
                        .val(r.intlTelInput("getNumber"));
                  });
              });
        }
      },
      bindSmartPhoneField() {
        d(".wpforms-form").on("wpformsBeforeFormSubmit", function () {
          d(this).find(".wpforms-smart-phone-field").trigger("input");
        });
      },
      loadPayments() {
        d(".wpforms-payment-total").each(function (e, t) {
          p.amountTotal(this);
        }),
          void 0 !== d.fn.payment &&
            (d(".wpforms-field-credit-card-cardnumber").payment(
              "formatCardNumber"
            ),
            d(".wpforms-field-credit-card-cardcvc").payment("formatCardCVC"));
      },
      loadMailcheck() {
        wpforms_settings.mailcheck_enabled &&
          void 0 !== d.fn.mailcheck &&
          (0 < wpforms_settings.mailcheck_domains.length &&
            (Mailcheck.defaultDomains = Mailcheck.defaultDomains.concat(
              wpforms_settings.mailcheck_domains
            )),
          0 < wpforms_settings.mailcheck_toplevel_domains.length &&
            (Mailcheck.defaultTopLevelDomains =
              Mailcheck.defaultTopLevelDomains.concat(
                wpforms_settings.mailcheck_toplevel_domains
              )),
          d(s).on("blur", ".wpforms-field-email input", function () {
            const e = d(this),
              o = e.attr("id");
            e.mailcheck({
              suggested(e, t) {
                (t.full = t.full.replace(/%(?![0-9][0-9a-fA-F]+)/g, "%25")),
                  (t.address = t.address.replace(
                    /%(?![0-9][0-9a-fA-F]+)/g,
                    "%25"
                  )),
                  (t.domain = t.domain.replace(
                    /%(?![0-9][0-9a-fA-F]+)/g,
                    "%25"
                  )),
                  t.address.match(/^xn--/) &&
                    ((t.full = punycode.toUnicode(decodeURI(t.full))),
                    (r = t.full.split("@")),
                    (t.address = r[0]),
                    (t.domain = r[1])),
                  t.domain.match(/^xn--/) &&
                    (t.domain = punycode.toUnicode(decodeURI(t.domain)));
                var r = decodeURI(t.address)
                    .replaceAll(/[<>'"()/\\|:;=@%&\s]/gi, "")
                    .substr(0, 64),
                  a = decodeURI(t.domain).replaceAll(
                    /[<>'"()/\\|:;=@%&+_\s]/gi,
                    ""
                  );
                (t =
                  '<a href="#" class="mailcheck-suggestion" data-id="' +
                  o +
                  '" title="' +
                  wpforms_settings.val_email_suggestion_title +
                  '">' +
                  r +
                  "@" +
                  a +
                  "</a>"),
                  (t = wpforms_settings.val_email_suggestion.replace(
                    "{suggestion}",
                    t
                  )),
                  e
                    .closest(".wpforms-field")
                    .find("#" + o + "_suggestion")
                    .remove(),
                  e
                    .parent()
                    .append(
                      '<label class="wpforms-error mailcheck-error" id="' +
                        o +
                        '_suggestion">' +
                        t +
                        "</label>"
                    );
              },
              empty() {
                d("#" + o + "_suggestion").remove();
              },
            });
          }),
          d(s).on(
            "click",
            ".wpforms-field-email .mailcheck-suggestion",
            function (e) {
              var t = d(this),
                r = t.closest(".wpforms-field"),
                a = t.data("id");
              e.preventDefault(),
                r.find("#" + a).val(t.text()),
                t.parent().remove();
            }
          ));
      },
      loadChoicesJS(e) {
        "function" == typeof l.Choices &&
          (e = e?.length ? e : d(s))
            .find(
              ".wpforms-field-select-style-modern .choicesjs-select, .wpforms-field-payment-select .choicesjs-select"
            )
            .each(function (e, t) {
              var r, a, o;
              d(t).data("choicesjs") ||
                ((r = l.wpforms_choicesjs_config || {}),
                (a = d(t).data("search-enabled")),
                (o = d(t).data("remove-items-enabled")),
                (r.searchEnabled = void 0 === a || a),
                (r.removeItems = void 0 === o || o),
                (r.removeItemButton = r.removeItems),
                (r.searchEnabled = void 0 === a || a),
                (r.allowHTML = !1),
                (r.callbackOnInit = function () {
                  const t = this,
                    r = d(t.passedElement.element),
                    a = d(t.input.element),
                    e = r.data("size-class");
                  r
                    .removeAttr("hidden")
                    .addClass(t.config.classNames.input + "--hidden"),
                    e && d(t.containerOuter.element).addClass(e),
                    r.prop("multiple") &&
                      (a
                        .data("placeholder", a.attr("placeholder"))
                        .css("width", "auto"),
                      t.getValue(!0).length) &&
                      a.removeAttr("placeholder"),
                    r.on("change", function () {
                      r.prop("multiple") &&
                        (t.getValue(!0).length
                          ? a.removeAttr("placeholder")
                          : a
                              .attr("placeholder", a.data("placeholder"))
                              .css("width", "auto"));
                      var e = r.closest("form").data("validator");
                      e && e.element(r);
                    });
                }),
                (r.callbackOnCreateTemplates = function () {
                  const r = d(this.passedElement.element);
                  return {
                    option(e) {
                      var t = Choices.defaults.templates.option.call(this, e);
                      return (
                        void 0 !== e.placeholder &&
                          !0 === e.placeholder &&
                          t.classList.add("placeholder"),
                        r.hasClass("wpforms-payment-price") &&
                          void 0 !== e.customProperties &&
                          null !== e.customProperties &&
                          (t.dataset.amount = e.customProperties),
                        t
                      );
                    },
                  };
                }),
                d(t).data("choicesjs", new Choices(t, r)));
            });
      },
      bindChoicesJS() {
        d(s).on("click", ".choices", function (e) {
          var t = d(this),
            r = t.find("select").data("choicesjs");
          r &&
            t.hasClass("is-open") &&
            (e.target.classList.contains("choices__inner") ||
              e.target.classList.contains("choices__arrow")) &&
            r.hideDropdown();
        });
      },
      bindUIActions() {
        var e = d(s);
        e.on("click", ".wpforms-page-button", function (e) {
          e.preventDefault(), p.pagebreakNav(this);
        }),
          e.on("change input", ".wpforms-payment-price", function () {
            p.amountTotal(this, !0);
          }),
          e.on("change input", "select.wpforms-payment-quantity", function () {
            p.amountTotal(this, !0), p.updateOrderSummaryItemQuantity(d(this));
          }),
          e.on("input", ".wpforms-payment-user-input", function () {
            var e = d(this),
              t = e.val();
            e.val(t.replace(/[^0-9.,]/g, ""));
          }),
          e.on("focusout", ".wpforms-payment-user-input", function () {
            var e = d(this),
              t = e.val();
            if (!t) return t;
            (t = p.amountSanitize(t)), (t = p.amountFormat(t));
            e.val(t);
          }),
          e.on("wpformsProcessConditionals", function (e, t) {
            p.amountTotal(t, !0);
          }),
          e.on("wpformsProcessConditionalsField", function (e, t, r) {
            p.updateOrderSummaryItems(
              d("#wpforms-form-" + t),
              d(`#wpforms-${t}-field_` + r),
              ""
            );
          }),
          e
            .on("mouseenter", ".wpforms-field-rating-item", function () {
              d(this)
                .parent()
                .find(".wpforms-field-rating-item")
                .removeClass("selected hover"),
                d(this).prevAll().addBack().addClass("hover");
            })
            .on("mouseleave", ".wpforms-field-rating-item", function () {
              d(this)
                .parent()
                .find(".wpforms-field-rating-item")
                .removeClass("selected hover"),
                d(this)
                  .parent()
                  .find("input:checked")
                  .parent()
                  .prevAll()
                  .addBack()
                  .addClass("selected");
            }),
          d(s).on("change", ".wpforms-field-rating-item input", function () {
            var e = d(this),
              t = e
                .closest(".wpforms-field-rating-items")
                .find(".wpforms-field-rating-item");
            e.focus(),
              t.removeClass("hover selected"),
              e.parent().prevAll().addBack().addClass("selected");
          }),
          d(function () {
            d(".wpforms-field-rating-item input:checked").trigger("change");
          }),
          e.on("keydown", ".wpforms-image-choices-item label", function (e) {
            var t = d(this);
            if (
              t.closest(".wpforms-field").hasClass("wpforms-conditional-hide")
            )
              return e.preventDefault(), !1;
            32 === e.keyCode &&
              (t.find("input").trigger("click"), e.preventDefault());
          }),
          l.document.documentMode &&
            e.on("click", ".wpforms-image-choices-item img", function () {
              d(this).closest("label").find("input").trigger("click");
            }),
          e.on(
            "change",
            ".wpforms-field-checkbox input, .wpforms-field-radio input, .wpforms-field-payment-multiple input, .wpforms-field-payment-checkbox input, .wpforms-field-gdpr-checkbox input",
            function (e) {
              var t = d(this);
              if (
                t.closest(".wpforms-field").hasClass("wpforms-conditional-hide")
              )
                return e.preventDefault(), !1;
              switch (t.attr("type")) {
                case "radio":
                  t
                    .closest("ul")
                    .find("li")
                    .removeClass("wpforms-selected")
                    .find("input[type=radio]")
                    .removeProp("checked"),
                    t
                      .prop("checked", !0)
                      .closest("li")
                      .addClass("wpforms-selected");
                  break;
                case "checkbox":
                  t.is(":checked")
                    ? (t.closest("li").addClass("wpforms-selected"),
                      t.prop("checked", !0))
                    : (t.closest("li").removeClass("wpforms-selected"),
                      t.prop("checked", !1));
              }
            }
          ),
          e.on("input", ".wpforms-field-file-upload", function () {
            var e = d(this),
              t = e
                .closest("form.wpforms-form")
                .find(
                  '.wpforms-field-file-upload input:not(".dropzone-input")'
                );
            let a = 0,
              r = Number(wpforms_settings.post_max_size),
              o =
                '<div class="wpforms-error-container-post_max_size">' +
                wpforms_settings.val_post_max_size +
                "</div>";
            e = e
              .closest("form.wpforms-form")
              .find(".wpforms-submit-container");
            let i = e.find("button.wpforms-submit"),
              s = e.prev();
            var n = i.closest("form"),
              p = n.find(".wpforms-page-next:visible");
            0 !== n.find(".wpforms-page-indicator").length &&
              0 !== p.length &&
              (i = p),
              t.each(function () {
                var e = d(this);
                let t = 0;
                for (var r = e[0].files.length; t < r; t++)
                  a += e[0].files[t].size;
              }),
              a < r
                ? (s.find(".wpforms-error-container-post_max_size").remove(),
                  i.prop("disabled", !1),
                  WPFormsUtils.triggerEvent(
                    n,
                    "wpformsFormSubmitButtonRestore",
                    [n, i]
                  ),
                  WPFormsUtils.triggerEvent(n, "wpformsCombinedUploadsSizeOk", [
                    n,
                    s,
                  ]))
                : ((a = Number((a / 1048576).toFixed(3))),
                  (r = Number((r / 1048576).toFixed(3))),
                  (o = o.replace(/{totalSize}/, a).replace(/{maxSize}/, r)),
                  s.hasClass("wpforms-error-container")
                    ? (s
                        .find(".wpforms-error-container-post_max_size")
                        .remove(),
                      s.append(o))
                    : (e.before(
                        '<div class="wpforms-error-container">{errorMsg}</div>'.replace(
                          /{errorMsg}/,
                          o
                        )
                      ),
                      (s = e.prev())),
                  i.prop("disabled", !0),
                  WPFormsUtils.triggerEvent(
                    n,
                    "wpformsFormSubmitButtonDisable",
                    [n, i]
                  ),
                  WPFormsUtils.triggerEvent(
                    n,
                    "wpformsCombinedUploadsSizeError",
                    [n, s]
                  ));
          }),
          e.on(
            "change input",
            ".wpforms-field-number-slider input[type=range]",
            function (e) {
              var t = d(e.target).siblings(".wpforms-field-number-slider-hint");
              t.html(
                t
                  .data("hint")
                  .replaceAll("{value}", "<b>" + e.target.value + "</b>")
              );
            }
          ),
          e.on("keydown", ".wpforms-form input", function (e) {
            var t, r;
            13 !== e.keyCode ||
              0 === (r = (t = d(this)).closest(".wpforms-page")).length ||
              [
                "text",
                "tel",
                "number",
                "email",
                "url",
                "radio",
                "checkbox",
              ].indexOf(t.attr("type")) < 0 ||
              (t.hasClass("wpforms-datepicker") && t.flatpickr("close"),
              e.preventDefault(),
              (r.hasClass("last")
                ? r.closest(".wpforms-form").find(".wpforms-submit")
                : r.find(".wpforms-page-next")
              ).trigger("click"));
          }),
          e.on("keypress", ".wpforms-field-number input", function (e) {
            return /^[-0-9.]+$/.test(String.fromCharCode(e.keyCode || e.which));
          }),
          e
            .one(
              "input",
              ".wpforms-field input, .wpforms-field textarea, .wpforms-field select",
              p.formChanged
            )
            .one(
              "change",
              ".wpforms-field-select-style-modern, .wpforms-timepicker",
              p.formChanged
            )
            .one("focus", ".dropzone-input", p.formChanged)
            .one("click touchstart", ".wpforms-signature-canvas", p.formChanged)
            .one("wpformsRichTextContentChange", p.richTextContentChanged),
          d("form.wpforms-form").on(
            "wpformsBeforePageChange",
            p.skipEmptyPages
          );
      },
      skipEmptyPages(e, t, r, a) {
        var o = p.findNonEmptyPage(t, r, a);
        o !== t &&
          (e.preventDefault(),
          1 === o && "prev" === a
            ? ((e = r.find(".wpforms-page-2")),
              (a = r.find(".wpforms-page-" + t)),
              (t = (e.find(".wpforms-page-prev").length ? e : a).find(
                ".wpforms-page-prev"
              )),
              wpforms.navigateToPage(t, "prev", 2, r, e))
            : ((t = r.find(".wpforms-page-" + (a = o - 1))),
              wpforms.navigateToPage(
                t.find(".wpforms-page-next"),
                "next",
                a,
                r,
                t
              )));
      },
      findNonEmptyPage(e, t, r) {
        let a = e;
        for (; p.isEmptyPage(t, a); ) "prev" === r ? a-- : a++;
        return a;
      },
      isEmptyPage(e, t) {
        return (
          1 !== t &&
          !(e = e.find(".wpforms-page-" + t)).hasClass("last") &&
          ((t = e.find(
            ".wpforms-field:not(.wpforms-field-pagebreak):not(.wpforms-field-hidden)"
          )),
          e.find(".wpforms-conditional-hide").length === t.length)
        );
      },
      formChanged(e) {
        var t = d(this).closest(".wpforms-form");
        p.maybeSetStartTime(t);
      },
      richTextContentChanged(e, t, r) {
        (r = r.getContainer()), (r = d(r).closest(".wpforms-form"));
        p.maybeSetStartTime(r);
      },
      maybeSetStartTime(e) {
        e.data("timestamp") ||
          (e.hasClass("wpforms-ajax-form") && "undefined" != typeof FormData
            ? e.data("timestamp", Date.now())
            : e.append(
                '<input type="hidden" name="start_timestamp" value="' +
                  Date.now() +
                  '">'
              ));
      },
      entryPreviewFieldPageChange(e, t, r) {
        console.warn(
          "WARNING! Obsolete function called. Function wpforms.entryPreviewFieldPageChange has been deprecated, please use the WPFormsEntryPreview.pageChange function instead!"
        ),
          WPFormsEntryPreview.pageChange(e, t, r);
      },
      entryPreviewFieldUpdate(e, t) {
        console.warn(
          "WARNING! Obsolete function called. Function wpforms.entryPreviewFieldUpdate has been deprecated, please use the WPFormsEntryPreview.update function instead!"
        ),
          WPFormsEntryPreview.update(e, t);
      },
      scrollToError(e) {
        if (0 !== e.length) {
          let t = e.find(".wpforms-field.wpforms-has-error");
          0 !== (t = 0 === t.length ? e.closest(".wpforms-field") : t).length &&
            void 0 !== (e = t.offset()) &&
            p.animateScrollTop(e.top - 75, 750).done(function () {
              var e = t.find(".wpforms-error").first();
              "function" == typeof e.focus && e.trigger("focus");
            });
        }
      },
      pagebreakNav(e) {
        const t = d(e),
          r = t.data("action"),
          a = t.data("page"),
          o = t.closest(".wpforms-form"),
          i = o.find(".wpforms-page-" + a);
        p.saveTinyMCE(),
          "next" === r && void 0 !== d.fn.validate
            ? p.checkForInvalidFields(o, i, function () {
                p.navigateToPage(t, r, a, o, i);
              })
            : ("prev" !== r && "next" !== r) || p.navigateToPage(t, r, a, o, i);
      },
      checkForInvalidFields(e, t, r) {
        var a = e.data("validator");
        if (a)
          if (0 < a.pendingRequest)
            setTimeout(function () {
              p.checkForInvalidFields(e, t, r);
            }, 800);
          else {
            let a = !0;
            t.find(":input").each(function (e, t) {
              var r = d(t);
              !r.attr("name") ||
                r.hasClass("wpforms-field-skip-validation") ||
                d(t).valid() ||
                (a = !1);
            }),
              a ? r() : p.scrollToError(t);
          }
      },
      navigateToPage(t, r, a, o, e) {
        if (!t.hasClass("wpforms-disabled")) {
          let e = a;
          "next" === r ? (e += 1) : "prev" === r && --e,
            WPFormsUtils.triggerEvent(t, "wpformsBeforePageChange", [
              e,
              o,
              r,
            ]).isDefaultPrevented() ||
              (o.find(".wpforms-page").hide(),
              (a = o.find(".wpforms-page-" + e)).show(),
              p.toggleReCaptchaAndSubmitDisplay(o, r, a),
              (a = p.getPageScroll(o)) &&
                p.animateScrollTop(o.offset().top - a, 750, null),
              t.trigger("wpformsPageChange", [e, o, r]),
              p.manipulateIndicator(e, o));
        }
      },
      toggleReCaptchaAndSubmitDisplay(e, t, r) {
        var a = e.find(".wpforms-submit-container"),
          e = e.find(".wpforms-recaptcha-container");
        "next" === t && r.hasClass("last")
          ? (e.show(), a.show())
          : "prev" === t && (e.hide(), a.hide());
      },
      getPageScroll(e) {
        return (
          !1 !== l.wpforms_pageScroll &&
          (p.empty(l.wpform_pageScroll)
            ? 0 !== e.find(".wpforms-page-indicator").data("scroll") && 75
            : l.wpform_pageScroll)
        );
      },
      manipulateIndicator(e, t) {
        var r,
          a = t.find(".wpforms-page-indicator");
        a &&
          ("connector" === (r = a.data("indicator")) || "circles" === r
            ? p.manipulateConnectorAndCirclesIndicator(a, r, e)
            : "progress" === r && p.manipulateProgressIndicator(a, t, e));
      },
      manipulateConnectorAndCirclesIndicator(e, t, r) {
        var a = e.data("indicator-color");
        e.find(".wpforms-page-indicator-page").removeClass("active"),
          e.find(".wpforms-page-indicator-page-" + r).addClass("active"),
          e.find(".wpforms-page-indicator-page-number").removeAttr("style"),
          e
            .find(".active .wpforms-page-indicator-page-number")
            .css("background-color", a),
          "connector" === t &&
            (e
              .find(".wpforms-page-indicator-page-triangle")
              .removeAttr("style"),
            e
              .find(".active .wpforms-page-indicator-page-triangle")
              .css("border-top-color", a));
      },
      manipulateProgressIndicator(e, t, r) {
        var a = e.find(".wpforms-page-indicator-page-title"),
          o = e.find(".wpforms-page-indicator-page-title-sep"),
          t = (r / t.find(".wpforms-page").length) * 100;
        e.find(".wpforms-page-indicator-page-progress").css("width", t + "%"),
          e.find(".wpforms-page-indicator-steps-current").text(r),
          a.data("page-" + r + "-title")
            ? (a.css("display", "inline").text(a.data("page-" + r + "-title")),
              o.css("display", "inline"))
            : (a.css("display", "none"), o.css("display", "none"));
      },
      bindOptinMonster() {
        s.addEventListener("om.Campaign.load", function (e) {
          p.ready(), p.optinMonsterRecaptchaReset(e.detail.Campaign.data.id);
        }),
          d(s).on("OptinMonsterOnShow", function (e, t, r) {
            p.ready(), p.optinMonsterRecaptchaReset(t.optin);
          });
      },
      optinMonsterRecaptchaReset(e) {
        var e = d("#om-" + e).find(".wpforms-form"),
          t = e.find(".wpforms-recaptcha-container"),
          r = e.find(".g-recaptcha");
        if (e.length && r.length) {
          const a = r.attr("data-sitekey"),
            o = "recaptcha-" + Date.now(),
            i = t.hasClass("wpforms-is-hcaptcha") ? hcaptcha : grecaptcha;
          r.remove(),
            t.prepend(
              '<div class="g-recaptcha" id="' +
                o +
                '" data-sitekey="' +
                a +
                '"></div>'
            ),
            i.render(o, {
              sitekey: a,
              callback() {
                wpformsRecaptchaCallback(d("#" + o));
              },
            });
        }
      },
      amountTotal(e, t) {
        t = t || !1;
        const r = d(e).closest(".wpforms-form"),
          a = p.amountTotalCalc(r),
          o = p.amountFormatSymbol(a);
        r.find(".wpforms-payment-total").each(function () {
          "hidden" === d(this).attr("type") || "text" === d(this).attr("type")
            ? (d(this).val(o),
              "text" === d(this).attr("type") &&
                t &&
                r.data("validator") &&
                d(this).valid())
            : d(this).text(o);
        }),
          p.updateOrderSummaryItems(r, d(e), o);
      },
      updateOrderSummaryItems(t, r, a) {
        t.find(".wpforms-order-summary-preview").each(function () {
          const e = d(this);
          "" !== a &&
            e
              .find(
                ".wpforms-order-summary-preview-total .wpforms-order-summary-item-price"
              )
              .text(a),
            r.hasClass("wpforms-payment-total")
              ? t.find(".wpforms-payment-price").each(function () {
                  p.updateOrderSummaryItem(d(this), e);
                })
              : p.updateOrderSummaryItem(r, e);
        });
      },
      updateOrderSummaryItem(e, t) {
        if (e.hasClass("wpforms-payment-price")) {
          const o = e.closest(".wpforms-field"),
            i = o.data("field-id"),
            s = e.prop("type");
          var r, a;
          "checkbox" === s
            ? t
                .find(`tr[data-field="${i}"][data-choice="${e.val()}"]`)
                .toggle(e.is(":checked"))
            : "radio" === s || "select-one" === s
            ? t.find(`tr[data-field="${i}"]`).each(function () {
                var e = d(this).data("choice");
                "radio" === s
                  ? d(this).toggle(o.find(`input[value="${e}"]`).is(":checked"))
                  : d(this).toggle(e === parseInt(o.find("select").val(), 10));
              })
            : ((r = t.find(`tr[data-field="${i}"]`)),
              (a = e.val()),
              r
                .find(".wpforms-order-summary-item-price")
                .text(p.amountFormatSymbol(a)),
              r.toggle("block" === o.css("display"))),
            o.hasClass("wpforms-payment-quantities-enabled")
              ? p.updateOrderSummaryItemQuantity(e)
              : (p.updateSummaryPriceWidth(t), p.toggleSummaryPlaceholder(t));
        }
      },
      updateOrderSummaryItemQuantity(e) {
        const t = e.closest(".wpforms-field"),
          a = t.find(
            "input.wpforms-payment-price, select.wpforms-payment-price"
          ),
          r = e.closest(".wpforms-form"),
          o = t.data("field-id"),
          i = p.getPaymentFieldQuantity(a),
          s = p.getPaymentFieldAmount(a),
          n = a.prop("type");
        r.find(".wpforms-order-summary-preview").each(function () {
          var e,
            t = d(this);
          let r;
          (r =
            "checkbox" === n || "radio" === n || "select-one" === n
              ? ((e = a.val()),
                t.find(`tr[data-field="${o}"][data-choice="${e}"]`))
              : t.find(`tr[data-field="${o}"]`)).toggle(0 < i),
            r.find(".wpforms-order-summary-item-quantity").text(i),
            r
              .find(".wpforms-order-summary-item-price")
              .text(p.amountFormatSymbol(s * i)),
            p.updateSummaryPriceWidth(t),
            p.toggleSummaryPlaceholder(t);
        });
      },
      updateSummaryPriceWidth(e) {
        var t = Math.max(
          e
            .find(
              ".wpforms-order-summary-preview-coupon-total .wpforms-order-summary-item-price"
            )
            .text().length,
          e
            .find(
              ".wpforms-order-summary-preview-total .wpforms-order-summary-item-price"
            )
            .text().length + 3
        );
        e.find(".wpforms-order-summary-item-price").css("width", t + "ch");
      },
      toggleSummaryPlaceholder(e) {
        var t = e.find(".wpforms-order-summary-placeholder");
        let r = !0;
        e.find(".wpforms-order-summary-field").each(function () {
          if ("none" !== d(this).css("display")) return (r = !1);
        }),
          t.toggle(r);
      },
      amountTotalCalc(e) {
        let r = 0;
        d(".wpforms-payment-price", e).each(function () {
          var e,
            t = d(this);
          t
            .closest(".wpforms-field-payment-single")
            .hasClass("wpforms-conditional-hide") ||
            ((e = p.getPaymentFieldAmount(t)) &&
              (r = Number(r) + e * p.getPaymentFieldQuantity(t)));
        });
        var t = d(s),
          a = WPFormsUtils.triggerEvent(t, "wpformsAmountTotalCalculate", [
            e,
            r,
          ]);
        return (
          (r = void 0 !== a.result && 0 <= a.result ? a.result : r),
          WPFormsUtils.triggerEvent(t, "wpformsAmountTotalCalculated", [e, r]),
          r
        );
      },
      getPaymentFieldAmount(e) {
        var t = e.attr("type");
        return "text" === t || "hidden" === t
          ? Number(p.amountSanitize(e.val()))
          : ("radio" !== t && "checkbox" !== t) || !e.is(":checked")
          ? e.is("select") &&
            0 < e.find("option:selected").length &&
            e.find("option:selected").data("amount")
            ? Number(p.amountSanitize(e.find("option:selected").data("amount")))
            : 0
          : Number(p.amountSanitize(e.data("amount")));
      },
      getPaymentFieldQuantity(e) {
        (e = e.attr("id")), (e = d(`#${e}-quantity`));
        return e.length ? Number(e.val()) : 1;
      },
      amountSanitize(e) {
        var t = p.getCurrency();
        return (
          (e = e.toString().replace(/[^0-9.,]/g, "")),
          "," === t.decimal_sep
            ? ("." === t.thousands_sep && -1 !== e.indexOf(t.thousands_sep)
                ? (e = e.replace(new RegExp("\\" + t.thousands_sep, "g"), ""))
                : "" === t.thousands_sep &&
                  -1 !== e.indexOf(".") &&
                  (e = e.replace(/\./g, "")),
              (e = e.replace(t.decimal_sep, ".")))
            : "," === t.thousands_sep &&
              -1 !== e.indexOf(t.thousands_sep) &&
              (e = e.replace(new RegExp("\\" + t.thousands_sep, "g"), "")),
          p.numberFormat(e, t.decimals, ".", "")
        );
      },
      amountFormat(e) {
        var t,
          r = p.getCurrency();
        return (
          (e = String(e)),
          "," === r.decimal_sep &&
            -1 !== e.indexOf(r.decimal_sep) &&
            ((t = e.indexOf(r.decimal_sep)),
            (e = e.substr(0, t) + "." + e.substr(t + 1, e.length - 1))),
          "," === r.thousands_sep &&
            -1 !== e.indexOf(r.thousands_sep) &&
            (e = e.replace(/,/g, "")),
          p.empty(e) && (e = 0),
          p.numberFormat(e, r.decimals, r.decimal_sep, r.thousands_sep)
        );
      },
      amountFormatSymbol(e) {
        var t = p.getCurrency(),
          e = p.amountFormat(e);
        return "left" === t.symbol_pos ? t.symbol + e : e + " " + t.symbol;
      },
      getCurrency() {
        var e = {
          code: "USD",
          thousands_sep: ",",
          decimals: 2,
          decimal_sep: ".",
          symbol: "$",
          symbol_pos: "left",
        };
        return (
          void 0 !== wpforms_settings.currency_code &&
            (e.code = wpforms_settings.currency_code),
          void 0 !== wpforms_settings.currency_thousands &&
            (e.thousands_sep = wpforms_settings.currency_thousands),
          void 0 !== wpforms_settings.currency_decimals &&
            (e.decimals = wpforms_settings.currency_decimals),
          void 0 !== wpforms_settings.currency_decimal &&
            (e.decimal_sep = wpforms_settings.currency_decimal),
          void 0 !== wpforms_settings.currency_symbol &&
            (e.symbol = wpforms_settings.currency_symbol),
          void 0 !== wpforms_settings.currency_symbol_pos &&
            (e.symbol_pos = wpforms_settings.currency_symbol_pos),
          e
        );
      },
      numberFormat(e, t, r, a) {
        e = (e + "").replace(/[^0-9+\-Ee.]/g, "");
        var o,
          i,
          e = isFinite(+e) ? +e : 0,
          t = isFinite(+t) ? Math.abs(t) : 0,
          a = void 0 === a ? "," : a,
          r = void 0 === r ? "." : r,
          s = (
            t
              ? ((s = e),
                (o = t),
                (i = Math.pow(10, o)),
                "" + (Math.round(s * i) / i).toFixed(o))
              : "" + Math.round(e)
          ).split(".");
        return (
          3 < s[0].length &&
            (s[0] = s[0].replace(/\B(?=(?:\d{3})+(?!\d))/g, a)),
          (s[1] || "").length < t &&
            ((s[1] = s[1] || ""),
            (s[1] += new Array(t - s[1].length + 1).join("0"))),
          s.join(r)
        );
      },
      empty(e) {
        var t;
        let r, a;
        var o = [void 0, null, !1, 0, "", "0"];
        for (a = 0, t = o.length; a < t; a++) if (e === o[a]) return !0;
        if ("object" != typeof e) return !1;
        for (r in e) if (e.hasOwnProperty(r)) return !1;
        return !0;
      },
      setUserIdentifier() {
        if (
          ((!l.hasRequiredConsent &&
            "undefined" != typeof wpforms_settings &&
            wpforms_settings.uuid_cookie) ||
            (l.hasRequiredConsent && l.hasRequiredConsent())) &&
          !p.getCookie("_wpfuuid")
        ) {
          var t = new Array(36),
            r = "0123456789abcdef";
          for (let e = 0; e < 36; e++)
            t[e] = r.substr(Math.floor(16 * Math.random()), 1);
          (t[14] = "4"),
            (t[19] = r.substr((3 & t[19]) | 8, 1)),
            (t[8] = t[13] = t[18] = t[23] = "-");
          var e = t.join("");
          p.createCookie("_wpfuuid", e, 3999);
        }
      },
      createCookie(e, t, r) {
        let a = "",
          o = "";
        var i;
        wpforms_settings.is_ssl && (o = ";secure"),
          (a = r
            ? -1 === r
              ? ""
              : ((i = new Date()).setTime(i.getTime() + 24 * r * 60 * 60 * 1e3),
                ";expires=" + i.toGMTString())
            : ";expires=Thu, 01 Jan 1970 00:00:01 GMT"),
          (s.cookie = e + "=" + t + a + ";path=/;samesite=strict" + o);
      },
      getCookie(e) {
        var r = e + "=",
          a = s.cookie.split(";");
        for (let t = 0; t < a.length; t++) {
          let e = a[t];
          for (; " " === e.charAt(0); ) e = e.substring(1, e.length);
          if (0 === e.indexOf(r)) return e.substring(r.length, e.length);
        }
        return null;
      },
      removeCookie(e) {
        p.createCookie(e, "", -1);
      },
      getFirstBrowserLanguage() {
        var e = l.navigator,
          t = ["language", "browserLanguage", "systemLanguage", "userLanguage"];
        let r, a;
        if (Array.isArray(e.languages))
          for (r = 0; r < e.languages.length; r++)
            if ((a = e.languages[r]) && a.length) return a;
        for (r = 0; r < t.length; r++) if ((a = e[t[r]]) && a.length) return a;
        return "";
      },
      currentIpToCountry(r) {
        function t() {
          d.get("https://ipapi.co/jsonp", function () {}, "jsonp").always(
            function (e) {
              let t = e?.country ? e.country : "";
              t ||
                ((e = p.getFirstBrowserLanguage()),
                (t = -1 < e.indexOf("-") ? e.split("-").pop() : "")),
                r(t);
            }
          );
        }
        d.get("https://geo.wpforms.com/v3/geolocate/json")
          .done(function (e) {
            e && e.country_iso ? r(e.country_iso) : t();
          })
          .fail(function (e) {
            t();
          });
      },
      formSubmit(e) {
        e instanceof jQuery || (e = d(e)),
          p.saveTinyMCE(),
          WPFormsUtils.triggerEvent(e, "wpformsBeforeFormSubmit", [
            e,
          ]).isDefaultPrevented()
            ? p.restoreSubmitButton(e, e.closest(".wpforms-container"))
            : e.hasClass("wpforms-ajax-form") && "undefined" != typeof FormData
            ? p.formSubmitAjax(e)
            : p.formSubmitNormal(e);
      },
      restoreSubmitButton(e, t) {
        var r = e.find(".wpforms-submit"),
          a = r.data("submit-text");
        a && r.text(a),
          r.prop("disabled", !1),
          WPFormsUtils.triggerEvent(e, "wpformsFormSubmitButtonRestore", [
            e,
            r,
          ]),
          t.css("opacity", ""),
          e.find(".wpforms-submit-spinner").hide();
      },
      formSubmitNormal(e) {
        var t, r;
        e.length &&
          ((r = (t = e.find(".wpforms-submit")).get(0).recaptchaID),
          (p.empty(r) && 0 !== r) || (t.get(0).recaptchaID = !1),
          e.append(
            '<input type="hidden" name="end_timestamp" value="' +
              Date.now() +
              '">'
          ),
          e.get(0).submit());
      },
      formHasCaptcha(e) {
        return (
          !(
            !e ||
            !e.length ||
            ("undefined" == typeof hcaptcha &&
              "undefined" == typeof grecaptcha &&
              "undefined" == typeof turnstile)
          ) && ((e = e.find(".wpforms-recaptcha-container")), Boolean(e.length))
        );
      },
      resetFormRecaptcha(r) {
        if (p.formHasCaptcha(r)) {
          var a = r.find(".wpforms-recaptcha-container");
          let e, t;
          (e = a.hasClass("wpforms-is-hcaptcha")
            ? hcaptcha
            : a.hasClass("wpforms-is-turnstile")
            ? turnstile
            : grecaptcha),
            (t = r.find(".wpforms-submit").get(0).recaptchaID),
            p.empty(t) &&
              0 !== t &&
              (t = r.find(".g-recaptcha").data("recaptcha-id")),
            (p.empty(t) && 0 !== t) || e.reset(t);
        }
      },
      consoleLogAjaxError(e) {
        e
          ? console.error("WPForms AJAX submit error:\n%s", e)
          : console.error("WPForms AJAX submit error");
      },
      displayFormAjaxErrors(e, t) {
        "string" == typeof t
          ? p.displayFormAjaxGeneralErrors(e, t)
          : ((t = t && "errors" in t ? t.errors : null),
            p.empty(t) || (p.empty(t.general) && p.empty(t.field))
              ? p.consoleLogAjaxError()
              : (p.empty(t.general) ||
                  p.displayFormAjaxGeneralErrors(e, t.general),
                p.empty(t.field) || p.displayFormAjaxFieldErrors(e, t.field)));
      },
      displayFormAjaxGeneralErrors(e, t) {
        var r, a;
        e &&
          e.length &&
          (p.empty(t) ||
            (p.isModernMarkupEnabled() &&
              e.attr({ "aria-invalid": "true", "aria-errormessage": "" }),
            "string" == typeof t
              ? ((a = p.isModernMarkupEnabled() ? ' role="alert"' : ""),
                (r = p.isModernMarkupEnabled()
                  ? `<span class="wpforms-hidden">${wpforms_settings.formErrorMessagePrefix}</span>`
                  : ""),
                e
                  .find(".wpforms-submit-container")
                  .before(
                    `<div class="wpforms-error-container"${a}>${r}${t}</div>`
                  ),
                p.setCurrentPage(e, {}))
              : ((a = e.data("formid")), p.printGeneralErrors(e, t, a))));
      },
      printGeneralErrors(o, e, i) {
        d.each(e, function (e, t) {
          switch (e) {
            case "header":
              o.prepend(t);
              break;
            case "footer":
              (r = t),
                0 === o.find(".wpforms-page-indicator").length
                  ? o.find(".wpforms-submit-container").before(r)
                  : o.find(".wpforms-page-1").append(r);
              break;
            case "recaptcha":
              (r = t), o.find(".wpforms-recaptcha-container").append(r);
          }
          var r, a;
          p.isModernMarkupEnabled() &&
            ((a = o.attr("aria-errormessage") || ""),
            o.attr("aria-errormessage", a + ` wpforms-${i}-${e}-error`));
        }),
          o.find(".wpforms-error-container").length &&
            p.animateScrollTop(
              o.find(".wpforms-error-container").first().offset().top - 100
            );
      },
      clearFormAjaxGeneralErrors(e) {
        e.find(".wpforms-error-container").remove(),
          e.find("#wpforms-field_recaptcha-error").remove(),
          p.isModernMarkupEnabled() &&
            e.attr({ "aria-invalid": "false", "aria-errormessage": "" });
      },
      displayFormAjaxFieldErrors(r, e) {
        var t;
        r &&
          r.length &&
          (p.empty(e) ||
            ((t = r.data("validator")) &&
              ((e = p.splitFieldErrors(e)),
              d.each(e, function (e, t) {
                d('[name="' + e + '"]', r).attr("data-server-error", t);
              }),
              t.showErrors(e),
              p.formHasCaptcha(r) || t.focusInvalid())));
      },
      splitFieldErrors: (i) => (
        d.each(i, function (o, e) {
          "string" != typeof e &&
            d.each(e, function (e, t) {
              var r = o.split("[").pop().replace("]", ""),
                a = o.replace("[" + r + "]", "");
              r === e
                ? (i[o] = t)
                : "string" == typeof e &&
                  isNaN(e) &&
                  (i[a + "[" + e + "]"] = t);
            });
        }),
        i
      ),
      formSubmitAjax: (a) => {
        if (!a.length) return d.Deferred().reject();
        const r = a.closest(".wpforms-container"),
          e = a.find(".wpforms-submit-spinner");
        let t;
        r.css("opacity", 0.6), e.show(), p.clearFormAjaxGeneralErrors(a);
        var o = new FormData(a.get(0)),
          o =
            (o.append("action", "wpforms_submit"),
            o.append("start_timestamp", a.data("timestamp")),
            o.append("end_timestamp", Date.now()),
            {
              type: "post",
              dataType: "json",
              url: wpforms_settings.ajaxurl,
              data: o,
              cache: !1,
              contentType: !1,
              processData: !1,
            });
        return (
          (o.success = function (e) {
            e
              ? e.data && e.data.action_required
                ? a.trigger("wpformsAjaxSubmitActionRequired", e)
                : e.success
                ? (a.trigger("wpformsAjaxSubmitSuccess", e),
                  e.data &&
                    (e.data.redirect_url
                      ? (a.trigger("wpformsAjaxSubmitBeforeRedirect", e),
                        (l.location = e.data.redirect_url))
                      : e.data.confirmation &&
                        (r.html(e.data.confirmation),
                        (t = r.find("div.wpforms-confirmation-scroll")),
                        r.trigger("wpformsAjaxSubmitSuccessConfirmation", e),
                        t.length) &&
                        p.animateScrollTop(t.offset().top - 100)))
                : (p.resetFormRecaptcha(a),
                  p.displayFormAjaxErrors(a, e.data),
                  a.trigger("wpformsAjaxSubmitFailed", e),
                  p.setCurrentPage(a, e.data))
              : p.consoleLogAjaxError();
          }),
          (o.error = function (e, t, r) {
            p.consoleLogAjaxError(r),
              a.trigger("wpformsAjaxSubmitError", [e, t, r]);
          }),
          (o.complete = function (e, t) {
            (e.responseJSON &&
              e.responseJSON.data &&
              (e.responseJSON.data.action_required ||
                ("success" === t && e.responseJSON.data.redirect_url))) ||
              (p.restoreSubmitButton(a, r),
              a.trigger("wpformsAjaxSubmitCompleted", [e, t]));
          }),
          WPFormsUtils.triggerEvent(a, "wpformsAjaxBeforeSubmit", [
            a,
          ]).isDefaultPrevented()
            ? (p.restoreSubmitButton(a, r), d.Deferred().reject())
            : d.ajax(o)
        );
      },
      setCurrentPage(r, a) {
        if (0 !== r.find(".wpforms-page-indicator").length) {
          const i = [];
          if (
            (r.find(".wpforms-page").each(function (e, t) {
              if (1 <= d(t).find(".wpforms-has-error").length)
                return i.push(d(t));
            }),
            0 !== i.length ||
              void 0 === a.errors ||
              void 0 === a.errors.general ||
              void 0 !== a.errors.general.footer ||
              void 0 === a.errors.general.recaptcha)
          ) {
            var o = 0 < i.length ? i[0] : r.find(".wpforms-page-1");
            let e,
              t = "prev";
            1 === o.data("page") ||
            (void 0 !== a.errors && void 0 !== a.errors.general.footer)
              ? (e = r.find(".wpforms-page-1").next())
              : ((e = 0 !== o.next().length ? o.next() : o.prev()),
                (t = 0 !== o.next().length ? "prev" : "next"));
            (a = e.find(".wpforms-page-next")), (o = e.data("page"));
            p.navigateToPage(a, t, o, r, d(".wpforms-page-" + o));
          }
        }
      },
      animateScrollTop(e, t, r) {
        return (
          (t = t || 1e3),
          (r = "function" == typeof r ? r : function () {}),
          d("html, body")
            .animate(
              { scrollTop: parseInt(e, 10) },
              { duration: t, complete: r }
            )
            .promise()
        );
      },
      saveTinyMCE() {
        "undefined" != typeof tinyMCE && tinyMCE.triggerSave();
      },
      isFunction(e) {
        return !!(e && e.constructor && e.call && e.apply);
      },
      compareTimesGreaterThan(e, t) {
        (e = e.replace(/(am|pm)/g, " $1").toUpperCase()),
          (t = t.replace(/(am|pm)/g, " $1").toUpperCase());
        e = Date.parse("01 Jan 2021 " + e);
        return Date.parse("01 Jan 2021 " + t) <= e;
      },
      isModernMarkupEnabled() {
        return !!wpforms_settings.isModernMarkupEnabled;
      },
      initTokenUpdater() {
        d(".wpforms-form").on(
          "focusin",
          function (e) {
            var t = d(e.target.closest("form")),
              r = Date.now();
            this.needsTokenUpdate(r, t) && this.updateToken(r, t, e);
          }.bind(this)
        );
      },
      needsTokenUpdate(e, t) {
        return (
          e - 1e3 * (t.attr("data-token-time") || 0) >=
            1e3 * wpforms_settings.token_cache_lifetime && !this.isUpdatingToken
        );
      },
      updateToken(t, r, a) {
        var e = r.data("formid");
        const o = r.find(".wpforms-submit");
        (this.isUpdatingToken = !0),
          o.prop("disabled", !0),
          d
            .post(wpforms_settings.ajaxurl, {
              action: "wpforms_get_token",
              formId: e,
            })
            .done(function (e) {
              e.success
                ? (r.attr("data-token-time", t),
                  r.attr("data-token", e.data.token),
                  o.prop("disabled", !1),
                  a.target === o[0] && o.trigger("click"))
                : console.error("Failed to update token: ", e);
            })
            .fail(function (e, t, r) {
              console.error("AJAX request failed: ", t, r);
            })
            .always(
              function () {
                (this.isUpdatingToken = !1), o.prop("disabled", !1);
              }.bind(this)
            );
      },
      restoreSubmitButtonOnEventPersisted() {
        l.onpageshow = function (e) {
          e.persisted &&
            d(".wpforms-form").each(function () {
              var e = d(this);
              p.restoreSubmitButton(e, e.closest(".wpforms-container"));
            });
        };
      },
    };
    return p;
  })(document, window, jQuery);
wpforms.init();
